{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs24 \cf0 ToDo:\
	- Replace concrete calls to super class by \'91super()\'92-call (already done in tests)\
	- Check if concrete tests need to explicitly call abstract test methods (or if they are called automatically) \'97> No, not necessary: remove all unnecessary methods in concrete classes\
	- Add errors for not satisfying last (omitted) if conditions\
	- Refactor Tremaux Solver: make maze a class field; uniform arbitrary order of direction choices\
	- Make (and rename) Abstract classes (Generator \'97> AbstractGenerator, Solver \'97> AbstractSolver)\
	- Solvers: instead of making their own entrance/exit if there is none: throw exception\
	- Throw exception if generateMaze(<2) is called\
	- Include Tremaux Solver in Demo\
	- Somehow make solvers deal with entry and exit (atm path only records the cell, not the direction)\
	- Clean up unused methods\
	- Improve Logging\
	- Distinguish public and private methods (prefix/suffix __)\
	- Normalize Generators (entry/exit)\
	- Change x and y axis ??? or just API to make mapping ???\
	- Enhance drawer to draw into different outputs (std, file)\
	- TkInter Drawer\
	- Mazes and Solvers with Loops (needs Memory for Solver)\
	- look at distutils\
	- Make animation of solver solving maze}